<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    <meta property="og:description" content="滤镜（filter）可改造元素的视觉呈现，CSS内置的滤镜有10种，通过SVG文件还能自定义滤镜。 一、调色滤镜 调色滤镜可控制元素的模糊、颜色、亮度等变化，并且多个滤镜可组合在一起使用。这些滤镜大部" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>CSS躬行记（6）——滤镜 - 咖啡机（K.F.J） - 博客园</title>
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=-oFz8B4m7JhHaZzdTkzPza2oLZNDRR8obnCz6w7OHbU" />
    <link id="MainCss" rel="stylesheet" href="/skins/gray/bundle-gray.min.css?v=0kzTEpk_hI7MaNe19aqYpko9NZ1XIIY9eVdg79uY1DI" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/strick/custom.css?v=hAaqAadmOZ/KVxeSit6lUhhUt6E=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/gray/bundle-gray-mobile.min.css?v=ZbqaRkECbUBQHdWai5Z6gU0S4TTdm61BUgInt0cJNjI" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/strick/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/strick/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/strick/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=uk-as-QYRHtjaAbeEigAktvhwf01NRrnle-6exg65Ak"></script>
    <script>
        var currentBlogId = 153408;
        var currentBlogApp = 'strick';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var skinName = 'gray';
    </script>
    
    
    
</head>
<body>
    <a name="top"></a>
    
    <!--done-->
<div id="banner"><div id="bnr_pic">
<!--done-->
<div class="header">
	<div class="headerText">
		<a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/strick/">咖啡机(K.F.J)</a>
<br>
	</div>
	<div class="headerDis">
每天进步一点点 研磨生活的香甜
</div>
</div>

</div></div>
<div id="main">
	<!-- left starts -->
	<div id="left">
	<div id="left_border">
		<DIV id="mystats">
			<br>
				<!--done-->
<div class="blogStats">
随笔- 
270&nbsp;
文章- 
81&nbsp;
评论- 
786&nbsp;
</div>


			
		</DIV>
		<div id="mylinks">

<a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
&nbsp;&nbsp;
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/strick/">
首页</a>
&nbsp;&nbsp;

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
&nbsp;&nbsp;

<a id="MyLinks1_NewArticleLink" class="menu" href="https://i.cnblogs.com/EditArticles.aspx?opt=1">新文章</a>
&nbsp;&nbsp;
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E5%92%96%E5%95%A1%E6%9C%BA%EF%BC%88K.F.J%EF%BC%89">
联系</a>&nbsp;&nbsp;
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
&nbsp;&nbsp;
<a id="blog_nav_rss" class="menu" href="https://www.cnblogs.com/strick/rss/">
订阅</a>&nbsp;
<a id="blog_nav_rss_image" href="https://www.cnblogs.com/strick/rss/">
    <img src="/skins/gray/images/xml.gif" alt="订阅" />
</a>

</div>
		<div id="topics">
			<div id="post_detail">
<!--done-->
<div class="post">
	<div class="postTitle">
		
<a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/strick/p/12518907.html">CSS躬行记（6）——滤镜</a>

	</div>
	
<div id="cnblogs_post_body" class="blogpost-body ">
    <p>　　滤镜（filter）可改造元素的视觉呈现，CSS内置的滤镜有10种，通过SVG文件还能自定义滤镜。</p>
<h1>一、调色滤镜</h1>
<p>　　调色滤镜可控制元素的模糊、颜色、亮度等变化，并且多个滤镜可组合在一起使用。这些滤镜大部分既能接收百分数，也能接收数值。当传入的值大于上限值时，会以上限值来处理。</p>
<p><span style="font-size: 18px;"><strong>1）模糊</strong></span></p>
<p>　　blur()滤镜会对元素进行高斯模糊的处理，它能接收一个模糊半径的长度值。注意，不能向其传递负数。在下图中，右侧是调用了blur()滤镜后的效果。</p>
<div class="cnblogs_code">
<pre><span style="color: #800000;">div </span>{<span style="color: #ff0000;">
  filter</span>:<span style="color: #0000ff;"> blur(5px)</span>;
}</pre>
</div>
<p><img style="display: block; margin: 0 auto;" src="https://img2020.cnblogs.com/blog/211606/202003/211606-20200318174525403-43199769.png" alt="" width="450" /></p>
<p><span style="font-size: 18px;"><strong>2）透明</strong></span></p>
<p>　　opacity()滤镜可控制元素的透明度，其默认值为1或100%（表示不透明），最小值为0。opacity()滤镜与opacity属性类似，但两者不是互斥关系，可同时应用于同一个元素，不过opacity属性会在执行完所有的滤镜后再起作用。在下图中，右侧是调用了opacity()滤镜后的效果。</p>
<div class="cnblogs_code">
<pre><span style="color: #800000;">div </span>{<span style="color: #ff0000;">
  filter</span>:<span style="color: #0000ff;"> opacity(.5)</span>;
}</pre>
</div>
<p><img style="display: block; margin: 0 auto;" src="https://img2020.cnblogs.com/blog/211606/202003/211606-20200318174627504-160969202.png" alt="" width="450" /></p>
<p><span style="font-size: 18px;"><strong>3）阴影</strong></span></p>
<p>　　drop-shadow()滤镜可为元素的透明部分提供阴影，其取值与text-shadow属性类似，也是X轴与Y轴的偏移、模糊半径以及颜色。下图使用了一张透明的五角星图，右侧调用了drop-shadow()滤镜，阴影会沿着透明轮廓渲染。</p>
<div class="cnblogs_code">
<pre><span style="color: #800000;">div </span>{<span style="color: #ff0000;">
  filter</span>:<span style="color: #0000ff;"> drop-shadow(5px 5px 5px #F60)</span>;
}</pre>
</div>
<p><img style="display: block; margin: 0 auto;" src="https://img2020.cnblogs.com/blog/211606/202003/211606-20200318174732449-760560657.png" alt="" width="400" /></p>
<p><span style="font-size: 18px;"><strong>4）灰度</strong></span></p>
<p>　　grayscale()滤镜能转换元素的灰度，当值为1或100%时，元素会转换成完全的灰度。在下图中，右侧是调用了grayscale()滤镜后的效果。</p>
<div class="cnblogs_code">
<pre><span style="color: #800000;">div </span>{<span style="color: #ff0000;">
  filter</span>:<span style="color: #0000ff;"> grayscale(100%)</span>;
}</pre>
</div>
<p><img style="display: block; margin: 0 auto;" src="https://img2020.cnblogs.com/blog/211606/202003/211606-20200318174833936-815747196.png" alt="" width="450" /></p>
<p><span style="font-size: 18px;"><strong>5）褐色</strong></span></p>
<p>　　sepia()滤镜能指定元素褐色的比例，即用褐色为元素上色。当值为1或100%时，元素会转换成完全的深褐色。在下图中，右侧是调用了sepia()滤镜后的效果。</p>
<div class="cnblogs_code">
<pre><span style="color: #800000;">div </span>{<span style="color: #ff0000;">
  filter</span>:<span style="color: #0000ff;"> sepia(100%)</span>;
}</pre>
</div>
<p><img style="display: block; margin: 0 auto;" src="https://img2020.cnblogs.com/blog/211606/202003/211606-20200318174941592-236385932.png" alt="" width="450" /></p>
<p>&nbsp;</p>
<p><span style="font-size: 18px;"><strong>6）反转</strong></span></p>
<p>　　invert()滤镜能将元素的颜色反转处理，即用255或100%减去颜色的R、G和B通道的值。在下图中，右侧是调用了invert()滤镜后的效果。</p>
<div class="cnblogs_code">
<pre><span style="color: #800000;">div </span>{<span style="color: #ff0000;">
  filter</span>:<span style="color: #0000ff;"> invert(100%)</span>;
}</pre>
</div>
<p><img style="display: block; margin: 0 auto;" src="https://img2020.cnblogs.com/blog/211606/202003/211606-20200318175105481-1559066288.png" alt="" width="450" /></p>
<p><span style="font-size: 18px;"><strong>7）色相旋转</strong></span></p>
<p>　　hue-rotate()滤镜能接收一个角度值，参照标准色轮（如下图）旋转元素的整体色相。</p>
<p><img style="display: block; margin: 0 auto;" src="https://img2020.cnblogs.com/blog/211606/202003/211606-20200318175151887-1256397065.png" alt="" width="300" /></p>
<p>　　在下图中，右侧是调用了hue-rotate()滤镜旋转90&deg;后的效果。</p>
<div class="cnblogs_code">
<pre><span style="color: #800000;">div </span>{<span style="color: #ff0000;">
  filter</span>:<span style="color: #0000ff;"> hue-rotate(90deg)</span>;
}</pre>
</div>
<p><img style="display: block; margin: 0 auto;" src="https://img2020.cnblogs.com/blog/211606/202003/211606-20200318175243160-1458662780.png" alt="" width="450" /></p>
<p><span style="font-size: 18px;"><strong>8）亮度</strong></span></p>
<p>　　brightness()滤镜能调整元素的明暗程度，值越小，元素越暗。在下图中，右侧是调用了brightness()滤镜后的效果。</p>
<div class="cnblogs_code">
<pre><span style="color: #800000;">div </span>{<span style="color: #ff0000;">
  filter</span>:<span style="color: #0000ff;"> brightness(50%)</span>;
}</pre>
</div>
<p><img style="display: block; margin: 0 auto;" src="https://img2020.cnblogs.com/blog/211606/202003/211606-20200318175340066-1821776329.png" alt="" width="450" /></p>
<p><span style="font-size: 18px;"><strong>9）对比度</strong></span></p>
<p>　　contrast()滤镜能调整元素颜色的对比度，对比度越低，颜色越接近。在下图中，右侧是调用了contrast()滤镜后的效果。</p>
<div class="cnblogs_code">
<pre><span style="color: #800000;">div </span>{<span style="color: #ff0000;">
  filter</span>:<span style="color: #0000ff;"> contrast(30%)</span>;
}</pre>
</div>
<p><img style="display: block; margin: 0 auto;" src="https://img2020.cnblogs.com/blog/211606/202003/211606-20200318175430922-2099239053.png" alt="" width="450" /></p>
<p><span style="font-size: 18px;"><strong>10）饱和度</strong></span></p>
<p>　　saturate()滤镜能调整元素颜色的饱和度，饱和度越低，颜色越暗。在下图中，右侧是调用了saturate()滤镜后的效果。</p>
<div class="cnblogs_code">
<pre><span style="color: #800000;">div </span>{<span style="color: #ff0000;">
  filter</span>:<span style="color: #0000ff;"> saturate(50%)</span>;
}</pre>
</div>
<p><img style="display: block; margin: 0 auto;" src="https://img2020.cnblogs.com/blog/211606/202003/211606-20200318175538846-999409281.png" alt="" width="450" /></p>
<p><span style="font-size: 18px;"><strong>11）组合</strong></span></p>
<p>　　在声明filter属性时，可定义多个滤镜函数，用空格分隔，如下所示。在下图中，右侧是调用了多个滤镜后的效果。</p>
<div class="cnblogs_code">
<pre><span style="color: #800000;">div </span>{<span style="color: #ff0000;">
  filter</span>:<span style="color: #0000ff;"> drop-shadow(5px 5px 5px #F60) sepia(100%) saturate(50%)</span>;
}</pre>
</div>
<p><img style="display: block; margin: 0 auto;" src="https://img2020.cnblogs.com/blog/211606/202003/211606-20200318175632724-1558683009.png" alt="" width="450" /></p>
<p>&nbsp;</p>
<h1>二、SVG滤镜</h1>
<p>　　所有的CSS滤镜都能通过SVG滤镜实现。以blur(5px)为例，首先用一个名为filter.svg的文件描绘模糊的效果，其内容如下所示。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">svg </span><span style="color: #ff0000;">height</span><span style="color: #0000ff;">="0"</span><span style="color: #ff0000;"> xmlns</span><span style="color: #0000ff;">="http://www.w3.org/2000/svg"</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="blur"</span><span style="color: #ff0000;"> x</span><span style="color: #0000ff;">="-5%"</span><span style="color: #ff0000;"> y</span><span style="color: #0000ff;">="-5%"</span><span style="color: #ff0000;"> width</span><span style="color: #0000ff;">="110%"</span><span style="color: #ff0000;"> height</span><span style="color: #0000ff;">="110%"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">feGaussianBlur </span><span style="color: #ff0000;">in</span><span style="color: #0000ff;">="SourceGraphic"</span><span style="color: #ff0000;"> stdDeviation</span><span style="color: #0000ff;">="5"</span><span style="color: #0000ff;">/&gt;</span>
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">svg</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>　　然后通过url()函数引用SVG文件中的滤镜，注意，井号后面跟着的是filter元素的id属性值，效果如下图所示。</p>
<div class="cnblogs_code">
<pre><span style="color: #800000;">div </span>{<span style="color: #ff0000;">
  filter</span>:<span style="color: #0000ff;"> url(./filter.svg#blur)</span>;
}</pre>
</div>
<p><img style="display: block; margin: 0 auto;" src="https://img2020.cnblogs.com/blog/211606/202003/211606-20200318175759977-164976264.png" alt="" width="300" /></p>
<p>　　通过SVG文件的方式就能创造出各种功能的滤镜，以适应更多的复杂场景。</p>
</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
	<div class="postDesc"><img src="/skins/gray/images/speech.gif" align="absmiddle" />&nbsp;posted on 
<span id="post-date">2020-04-20 07:16</span>&nbsp;
<a href="https://www.cnblogs.com/strick/">咖啡机（K.F.J）</a>&nbsp;
阅读(<span id="post_view_count">...</span>)&nbsp;
评论(<span id="post_comment_count">...</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12518907" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(12518907);return false;">收藏</a></div>
</div>


<script src="https://common.cnblogs.com/highlight/9.12.0/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 153408, cb_blogApp = 'strick', cb_blogUserGuid = 'b6e5c5ec-78f7-df11-ac81-842b2b196315';
    var cb_entryId = 12518907, cb_entryCreatedDate = '2020-04-20 07:16', cb_postType = 1; 
    loadViewCount(cb_entryId);
</script><a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<script>
    var commentManager = new blogCommentManager();
    commentManager.renderComments(0);
</script>

<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <script async="async" src="https://www.googletagservices.com/tag/js/gpt.js"></script>
    <script>
        var googletag = googletag || {};
        googletag.cmd = googletag.cmd || [];
    </script>
    <script>
        googletag.cmd.push(function () {
            googletag.defineSlot("/1090369/C1", [300, 250], "div-gpt-ad-1546353474406-0").addService(googletag.pubads());
            googletag.defineSlot("/1090369/C2", [468, 60], "div-gpt-ad-1539008685004-0").addService(googletag.pubads());
            googletag.pubads().enableSingleRequest();
            googletag.enableServices();
        });
    </script>
    <div id="cnblogs_c1" class="c_ad_block">
        <div id="div-gpt-ad-1546353474406-0" style="height:250px; width:300px;"></div>
    </div>
    <div id="under_post_news"></div>
    <div id="cnblogs_c2" class="c_ad_block">
        <div id="div-gpt-ad-1539008685004-0" style="height:60px; width:468px;">
            <script>
                if (new Date() >= new Date(2018, 9, 13)) {
                    googletag.cmd.push(function () { googletag.display("div-gpt-ad-1539008685004-0"); });
                }
            </script>
        </div>
    </div>
    <div id="under_post_kb"></div>
    <div id="HistoryToday" class="c_ad_block"></div>
    <script type="text/javascript">
        fixPostBody();
        deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);        deliverAdT2();
        deliverAdC1();
        deliverAdC2();
        loadNewsAndKb();
        loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
        loadOptUnderPost();
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div></div>


		</div>
	</div>
	</div>
	<!-- left ends -->
	<!-- right starts -->
	<div id="right">
		<!-- 右侧工具部分 -->
		<div id="right_content">
	
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

	
			<div id="calendar"><div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script></div>
			
				<DIV id="leftcontentcontainer">
					<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
				</DIV>
			
		</div>
		<!-- //右侧工具部分 -->
	</div>
	<!-- right ends -->
	<div class="clear"></div>
</div>
<div id="footer"><!--done-->
Copyright &copy; 2020 咖啡机（K.F.J）
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>


</div>


    
</body>
</html>